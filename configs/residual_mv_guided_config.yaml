# 残差MV引导网络配置 - 任务本质驱动的架构设计
# 核心理念: 学习残差修正而非全图重建，真正的"补洞"任务
# 基于: ExtraNet门控卷积 + 空间注意力 + 残差学习

experiment:
  name: "residual_mv_guided_inpainting"
  version: "v1.0"
  description: "残差MV引导的选择性补洞网络，从任务本质重新设计架构"

# 数据集配置 - 保持全分辨率HDR数据
datasets:
  train_data_root: "./output_motion_fix"
  preprocessing:
    # 继续使用完整分辨率
    target_resolution: [540, 960]   # 修复：降低分辨率提升训练速度（4倍速度提升）
    normalize_method: "unified"     # 修复：统一归一化方法，配合input_normalizer使用
    augmentation: false              # 禁用数据增强避免复杂性
  train_split: 0.8
  val_split: 0.2

# 模型配置 - 核心创新：残差MV引导架构
model:
  architecture: "residual_mv_guided"  # 新架构类型
  input_channels: 7
  output_channels: 3
  
  # 残差MV引导网络专门配置（内存优化）
  residual_mv_config:
    # 网络结构参数（减少通道数以节省内存）
    encoder_channels: [24, 48, 96, 192, 256]   # 减少主体特征提取器通道（约40%内存节省）
    mv_feature_channels: 24                     # 减少MV指导特征通道数
    
    # 门控卷积配置（参考ExtraNet）
    use_gated_conv: true                        # 启用门控卷积处理不规则空洞
    
    # 空间注意力配置
    attention_config:
      use_gated_attention: true                 # 门控注意力生成
      mv_sensitivity: 0.05                      # MV紧急程度灵敏度
      
    # 残差学习配置
    residual_learning:
      enable_residual_composition: true         # 启用残差组合: output = warped + correction
      clamp_mv_range: [-100, 100]             # 残差MV范围限制（像素）
      mv_normalization_factor: 100.0          # MV归一化因子
    
    # 选择性修复配置
    selective_repair:
      spatial_attention_guidance: true         # 空间注意力引导修复
      preservation_non_repair_regions: true   # 保持非修复区域不变
      
  # 网络参数
  dropout_rate: 0.1
  activation: "relu"
  
  # 统一输入归一化（解决归一化不一致问题）
  enable_input_normalization: true
  
  # 修正的输入归一化配置（新策略）
  input_normalizer:
    rgb_method: "hdr_to_ldr"         # 新策略：HDR→LDR→归一化
    tone_mapping: "reinhard"         # tone mapping方法 (reinhard|aces|exposure|filmic|clamp)
    normalize_masks: false           # 掩码不归一化，保持[0,1]原始值
    normalize_mv: false              # 残差MV不归一化，保持像素偏移值
    gamma: 2.2                       # gamma校正值

# 损失函数配置 - 平衡的残差补洞损失（降低权重避免震荡）
loss:
  # 残差学习损失（核心）
  residual_mse_weight: 1.0        # 修复：增加主损失权重主导训练
  residual_l1_weight: 0.4         # 降低L1损失权重
  
  # 空间加权损失（重点关注修复区域）
  spatial_weighted_weight: 0.6    # 降低空间加权损失权重
  
  # 保持性损失（保护非修复区域）
  preservation_weight: 0.3        # 降低保持损失权重
  
  # 细节保持损失
  edge_preservation_weight: 0.2   # 降低边缘保持损失权重
  perceptual_weight: 0.01         # 修复：大幅降低感知损失权重（从0.1到0.01，降低10倍）
  
  # 注意力监督损失（防止注意力机制失效）
  attention_supervision_weight: 0.1  # 约束空间注意力稀疏性和准确性

# 训练配置 - 适应残差学习特点
training:
  # 基础训练参数
  batch_size: 1                   # 全分辨率仍需batch_size=1
  num_workers: 0                  # 避免多进程内存开销
  
  # 学习配置 - 针对残差学习调整和训练稳定性
  max_epochs: 200                 # 增加epochs，残差学习需要更多迭代
  learning_rate: 0.0002           # 🔧 修复：学习率提升10倍解决收敛过慢问题 
  weight_decay: 0.00005           # 稍微降低weight_decay
  
  # 内存优化设置
  dataloader_pin_memory: false
  persistent_workers: false

# 优化器配置 - 针对残差学习优化和训练稳定性
optimizer:
  type: "adamw"
  lr: 0.0002                      # 🔧 修复：学习率提升10倍解决收敛过慢问题
  weight_decay: 0.00005           # 稍微降低weight_decay
  betas: [0.9, 0.999]
  eps: 0.00000001

# 训练器配置 - 更精细的控制
trainer:
  # 梯度控制 - 针对训练稳定性优化（内存优化版本）
  accumulate_grad_batches: 12     # 进一步增加累积批次以降低内存峰值
  precision: 32                   # 继续使用FP32确保残差精度
  gradient_clip_val: 1.0          # 放宽梯度裁剪，避过过度限制
  
  # 检查点设置
  val_check_interval: 0.2         # 更频繁验证
  check_val_every_n_epoch: 2      # 每2个epoch验证
  
  # 内存管理
  detect_anomaly: false
  benchmark: false
  deterministic: false

# 早停配置 - 适应残差学习收敛特点
early_stopping:
  monitor: "val_loss"
  patience: 25                    # 残差学习收敛可能更慢
  mode: "min"
  min_delta: 0.0003              # 更小的改善阈值

# 日志配置
wandb:
  enabled: false

tensorboard:
  enabled: true
  save_dir: "./logs/residual_mv_guided"

# 高级监控配置 - 专门监控残差学习效果
logging:
  level: "INFO"
  save_dir: "./logs/residual_mv_guided"
  
  advanced_monitoring:
    enabled: true
    
    # 图像可视化 - 重点观察残差修正效果
    image_visualization:
      enabled: true
      save_every_n_epochs: 2
      max_samples_per_epoch: 4
      save_format: "jpg"
      quality: 95
      
      # 残差学习专门可视化
      visualize_residuals: true           # 可视化残差修正
      visualize_spatial_attention: true   # 可视化空间注意力
      visualize_mv_guidance: true         # 可视化MV指导
    
    # 损失监控 - 详细追踪各项残差损失
    loss_monitoring:
      enabled: true
      log_frequency: 10
      track_loss_components: true         # 追踪损失组件
    
    # 梯度监控 - 残差学习的梯度流分析
    gradient_monitoring:
      enabled: true
      log_frequency: 20
      
    # 性能监控（紧急内存模式）
    performance_monitoring:
      enabled: true
      gpu_memory_threshold: 0.55    # 更严格的内存监控阈值
      log_frequency: 5              # 更频繁的内存监控

# 内存安全设置 - 紧急内存优化
memory_safety:
  # GPU内存管理（紧急模式）
  gpu_memory_fraction: 0.60       # 进一步降低内存使用阈值
  allow_growth: true
  
  # 系统内存管理
  max_system_memory_gb: 16
  
  # 清理策略 - 极度积极的内存管理
  emergency_cleanup_threshold: 0.55  # 更早触发紧急清理
  auto_garbage_collection: true
  checkpoint_memory_cleanup: true
  validation_memory_cleanup: true
  force_cleanup_every_n_batches: 2   # 每2个batch强制清理一次

# 残差学习监控 - 新增专门监控部分
residual_learning_monitoring:
  enabled: true
  
  # 残差质量监控
  monitor_residual_quality: true
  residual_quality_metrics: ["mse", "l1", "ssim"]
  residual_log_frequency: 50
  
  # 空间注意力监控
  monitor_spatial_attention: true
  attention_map_log_frequency: 100
  attention_statistics: true           # 统计attention分布
  
  # MV指导效果监控
  monitor_mv_guidance: true
  mv_guidance_log_frequency: 75
  mv_effectiveness_metrics: true      # MV指导有效性指标
  
  # 保持性监控（非修复区域是否被保持）
  monitor_preservation_quality: true
  preservation_log_frequency: 100
  
  # 选择性修复监控
  monitor_selective_repair: true
  repair_region_analysis: true        # 修复区域分析
  repair_quality_metrics: true       # 修复质量指标

# 实验对比设置 - 与其他架构对比
experiment_comparison:
  enabled: true
  baseline_models: 
    - "simplified_unet"
    - "enhanced_unet"  
    - "heterogeneous_unet"
  comparison_metrics:
    - "residual_mse"
    - "spatial_weighted_loss"
    - "preservation_quality"
    - "training_stability"
    - "convergence_speed"
    - "visual_quality"
    - "parameter_efficiency"
    
# 调试和分析配置
debugging:
  enabled: false                     # 生产时关闭
  save_intermediate_outputs: false   # 保存中间输出用于分析
  log_tensor_shapes: false          # 记录张量形状
  profile_forward_pass: false       # 前向传播性能分析

# 特殊功能配置
special_features:
  # HDR处理
  hdr_processing:
    enabled: true
    tone_mapping_method: "reinhard"   # TensorBoard可视化用
    gamma_correction: 2.2
    
  # 数据验证
  data_validation:
    enabled: true
    check_mv_range: true             # 检查MV范围合理性
    check_mask_validity: true       # 检查掩码有效性
    log_data_statistics: true       # 记录数据统计
    
  # 模型验证
  model_validation:
    enabled: true
    check_residual_learning: true   # 验证残差学习是否正常
    check_spatial_attention: true  # 验证空间注意力
    validate_preservation: true    # 验证保持性